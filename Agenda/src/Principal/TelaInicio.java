/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Principal;

import java.sql.*;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Dmitruk
 */
public class TelaInicio extends javax.swing.JFrame {

    private Connection conexao;
    private PreparedStatement pstm;
    private ResultSet rs;

    /**
     * Creates new form TelaInicio
     */
    public TelaInicio() {
        initComponents();
        fillTable();
        txtTelefone.setFocusLostBehavior(JFormattedTextField.COMMIT);
        txtRowId.setVisible(false);
        connectDb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblContatos = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtTelefone = new javax.swing.JFormattedTextField();
        txtPesquisar = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtRowId = new javax.swing.JTextField();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Principal/users.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("AGENDA DE CONTATOS");

        tblContatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOME", "TELEFONE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblContatos.getTableHeader().setResizingAllowed(false);
        tblContatos.getTableHeader().setReorderingAllowed(false);
        tblContatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblContatosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblContatos);

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Principal/create.png"))); // NOI18N
        btnAdd.setToolTipText("ADICIONAR");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Principal/update.png"))); // NOI18N
        btnUpdate.setToolTipText("ALTERAR");
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Principal/delete.png"))); // NOI18N
        btnDelete.setToolTipText("EXCLUIR");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Principal/apagador.png"))); // NOI18N
        btnClear.setToolTipText("LIMPAR CAMPOS");
        btnClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Adicionar");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Alterar");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Excluir");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Limpar Campos");

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#.####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        txtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisarActionPerformed(evt);
            }
        });
        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("NOME :");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("TELEFONE :");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("PESQUISAR :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)))
                        .addGap(7, 7, 7))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPesquisar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNome)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtRowId, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(8, 8, 8))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtRowId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(437, 887));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisarActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        //CHAMA O METODO PARA ADICIONAR UM CONTATO
        addContato();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        //CHAMA METODO PARA LIMPAR TODOS OS CAMPOS
        clearCampos();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        //CHAMA METODO PARA DELETAR CONTATO
        deleteContatos();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblContatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblContatosMouseClicked
        //CHAMA O METODO PARA SETAR CAMPOS COM DADOS DA TABELA
        selectedRow();
    }//GEN-LAST:event_tblContatosMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        //CHAMA O METODO PARA ALTERAR CONTATOS NO BANCO DE DADOS
        updateContatos();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        // CHAMA O EVENTO DE INTERAÇÃO EM TEMPO REAL PESQUISANDO CONTATOS
        // ENQUANTO DIGITANDO
        pesquisarContatos();
    }//GEN-LAST:event_txtPesquisarKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaInicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblContatos;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPesquisar;
    private javax.swing.JTextField txtRowId;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables

    private void connectDb() {
        String sql2 = "CREATE TABLE IF NOT EXISTS contatos(nome VARCHAR(40) NOT NULL, telefone VARCHAR(20) NOT NULL)";
        String sql = "jdbc:sqlite:contatos.db";
        try {
            conexao = DriverManager.getConnection(sql);
            pstm = conexao.prepareStatement(sql2);
            pstm.execute();
            conexao.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERRO AO CONECTAR COM BANCO DE DADOS -> " + e, "ERRO!", JOptionPane.OK_OPTION);
        }
    }

    private void addContato() {
        String sql = "INSERT INTO contatos (nome, telefone) values(?,?)";
        String sql2 = "jdbc:sqlite:contatos.db";
        try {
            if ((txtNome.getText().isEmpty()) || (txtTelefone.getText().equals("(  ) .    -    ")) || (txtTelefone.getText().equals("().-"))) {
                JOptionPane.showMessageDialog(null, "Preencha todos os campos para adicionar um contato! ", "ATENÇÃO", JOptionPane.OK_OPTION);
            } else {
                conexao = DriverManager.getConnection(sql2);
                pstm = conexao.prepareStatement(sql);
                pstm.setString(1, txtNome.getText());
                pstm.setString(2, txtTelefone.getText());
                pstm.executeUpdate();

                DefaultTableModel tabela = (DefaultTableModel) tblContatos.getModel();
                Object[] dados = {txtNome.getText(), txtTelefone.getText()};
                tabela.addRow(dados);
                JOptionPane.showMessageDialog(null, "Contato Adicionado Com Sucesso!");
                clearCampos();
                conexao.close();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERRO AO ADICIONAR CONTATO -> " + e, "ERRO!", JOptionPane.OK_OPTION);
        }
    }

    private void updateContatos() {
        int i = tblContatos.getSelectedRow();
        DefaultTableModel tabela = (DefaultTableModel) tblContatos.getModel();
        String sql = "jdbc:sqlite:contatos.db";
        String sql2 = "UPDATE contatos SET nome = ?, telefone = ? WHERE ROWID = ?";
        try {
            if (i < 0) {
                JOptionPane.showMessageDialog(null, "Selecione um contato para Alterar! ", "ATENÇÃO", JOptionPane.OK_OPTION);
            } else {
                if ((txtNome.getText().isEmpty()) || (txtTelefone.getText().equals("().-")) || (txtTelefone.getText().equals("(  ) .    -    ")) || (txtRowId.getText().isEmpty())) {
                    JOptionPane.showMessageDialog(null, "Preencha todos os campos para atualizar o contato! ", "ATENÇÃO", JOptionPane.OK_OPTION);
                } else {
                    conexao = DriverManager.getConnection(sql);
                    pstm = conexao.prepareStatement(sql2);
                    pstm.setString(1, txtNome.getText());
                    pstm.setString(2, txtTelefone.getText());
                    pstm.setString(3, txtRowId.getText());
                    pstm.executeUpdate();
                    conexao.close();
                    tabela.setValueAt(txtNome.getText(), i, 0);
                    tabela.setValueAt(txtTelefone.getText(), i, 1);
                    clearCampos();
                    JOptionPane.showMessageDialog(null, "Contato atualizado com sucesso ");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERRO AO ATUALIZAR O CONTATO NO BANCO DE DADOS -> " + e, "ATENÇÃO", JOptionPane.OK_OPTION);
        }
    }

    private void deleteContatos() {
        int i = tblContatos.getSelectedRow();
        DefaultTableModel tabela = (DefaultTableModel) tblContatos.getModel();
        String conn = "jdbc:sqlite:contatos.db";
        String del = "DELETE FROM contatos WHERE rowid = ?";
        try {

            if (i < 0) {
                JOptionPane.showMessageDialog(null, "Selecione um contato para Exluir ", "ATENÇÃO", JOptionPane.OK_OPTION);
            } else {
                conexao = DriverManager.getConnection(conn);
            pstm = conexao.prepareStatement(del);
            pstm.setString(1, txtRowId.getText());
            int opt = JOptionPane.showConfirmDialog(null, "Deseja mesmo excluir o contato \nEssa ação não podera ser desfeita", "ATENÇÃO", JOptionPane.YES_NO_OPTION);

            if (opt == JOptionPane.YES_OPTION) {
                pstm.executeUpdate();
                tabela.removeRow(tblContatos.getSelectedRow());
            } else {
                clearCampos();
            }
            }
            conexao.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERRO AO EXCLUIR CONTATO " + e, " ATENÇÃO ", JOptionPane.OK_OPTION);
        }
    }

    private void selectedRow() {
        btnAdd.setEnabled(false);

        int i = tblContatos.getSelectedRow();
        String sql = "jdbc:sqlite:contatos.db";
        String sql2 = "SELECT ROWID FROM contatos WHERE nome = ? AND telefone = ?";

        DefaultTableModel tabela = (DefaultTableModel) tblContatos.getModel();
        txtNome.setText(tabela.getValueAt(i, 0).toString());
        txtTelefone.setText(tabela.getValueAt(i, 1).toString());
        try {
            conexao = DriverManager.getConnection(sql);
            pstm = conexao.prepareStatement(sql2);
            pstm.setString(1, txtNome.getText());
            pstm.setString(2, txtTelefone.getText());
            rs = pstm.executeQuery();
            txtRowId.setText(rs.getString("RowId"));
            conexao.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERRO AO PESQUISAR CONTATO COM BANCO DE DADOS " + e, "ATENÇÃO", JOptionPane.OK_OPTION);
        }

    }

    private void clearCampos() {
        tblContatos.clearSelection();
        txtNome.setText(null);
        txtTelefone.setText(null);
        txtPesquisar.setText(null);
        txtRowId.setText(null);
        btnAdd.setEnabled(true);

    }

    private void fillTable() {

        String sql = "jdbc:sqlite:contatos.db";
        String sql2 = "SELECT * FROM contatos";
        try {
            DefaultTableModel tabela = (DefaultTableModel) tblContatos.getModel();

            conexao = DriverManager.getConnection(sql);
            pstm = conexao.prepareStatement(sql2);
            rs = pstm.executeQuery();

            while (rs.next()) {
                Object[] contatosDb = {rs.getString("nome"), rs.getString("telefone")};
                tabela.addRow(contatosDb);
            }
            conexao.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERRO AO BUSCAR DADOS PARA TABELA DE CONTATOS -> " + e, "ERRO!", JOptionPane.OK_OPTION);
        }
    }

    private void pesquisarContatos() {
        String sql = "jdbc:sqlite:contatos.db";
        String sql2 = "SELECT * FROM contatos WHERE nome LIKE ?";

        try {
            conexao = DriverManager.getConnection(sql);
            pstm = conexao.prepareStatement(sql2);
            pstm.setString(1, txtPesquisar.getText() + "%");
            rs = pstm.executeQuery();
            tblContatos.setModel(DbUtils.resultSetToTableModel(rs));
            conexao.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERRO AO PESQUISAR CONTATOS NO BANCO DE DADOS -> " + e, "ATENÇÃO", JOptionPane.OK_OPTION);
        }

    }
}
